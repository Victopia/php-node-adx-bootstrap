angular.module("schemaForm").config(function(schemaFormProvider,schemaFormDecoratorsProvider,sfPathProvider,sfBuilderProvider){var datepicker=function(name,schema,options){if(schema.type==='string'&&(schema.format==='date'||schema.format==='date-time')){var f=schemaFormProvider.stdFormObj(name,schema,options);f.key=options.path;f.type='datepicker';options.lookup[sfPathProvider.stringify(options.path)]=f;return f;}};schemaFormProvider.defaults.string.unshift(datepicker);schemaFormDecoratorsProvider.defineAddOn('bootstrapDecorator','datepicker','decorators/bootstrap/datepicker/datepicker.html',sfBuilderProvider.stdBuilders);}).run(function($templateCache){$templateCache.put("decorators/bootstrap/datepicker/datepicker.html","<div class=\"form-group {{form.htmlClass}}\" ng-class=\"{\'has-error\': hasError()}\">\n  <label class=\"control-label {{form.labelHtmlClass}}\" ng-class=\"{\'sr-only\': !showTitle()}\" for=\"{{form.key.slice(-1)[0]}}\">{{form.title}}</label>\n  <div ng-class=\"{\'input-group\': (form.fieldAddonLeft || form.fieldAddonRight)}\">\n    <span ng-if=\"form.fieldAddonLeft\"\n          class=\"input-group-addon\"\n          ng-bind-html=\"form.fieldAddonLeft\"></span>\n    <input id=\"{{form.key.slice(-1)[0]}}\" ng-show=\"form.key\"\n           type=\"text\"\n           class=\"form-control {{form.fieldHtmlClass}}\"\n           schema-validate=\"form\"\n           ng-disabled=\"form.readonly\"\n           pick-a-date=\"form.pickadate\"\n           min-date=\"form.minDate\"\n           max-date=\"form.maxDate\"\n           select-years=\"form.selectYears\"\n           select-months=\"form.selectMonths\"\n           name=\"{{form.key.slice(-1)[0]}}\"\n           format=\"form.format\"\n           sf-changed=\"form\"\n           sf-field-model />\n    <span ng-if=\"form.fieldAddonRight\"\n          class=\"input-group-addon\"\n          ng-bind-html=\"form.fieldAddonRight\"></span>\n  </div>\n  <span class=\"help-block\">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span>\n</div>\n");}).directive('pickADate',function(){var formatDate=function(value){if(angular.isString(value)||angular.isNumber(value)){return new Date(value);}
return value;};return{restrict:'A',require:'ngModel',scope:{ngModel:'=',pickADate:'=',minDate:'=',maxDate:'=',format:'=',selectYears:'=?',selectMonths:'=?'},link:function(scope,element,attrs,ngModel){if(!element.pickadate){return;}
var opts={onClose:function(){element.blur();},formatSubmit:null,selectYears:(scope.selectYears||false),selectMonths:(scope.selectMonths||false)};if(scope.pickADate){angular.extend(opts,scope.pickADate);}
element.pickadate(opts);var defaultFormat='yyyy-mm-dd';var viewFormat=$.fn.pickadate.defaults.format;var picker=element.pickadate('picker');ngModel.$formatters.push(function(value){if(angular.isUndefined(value)||value===null){return value;}
picker.set('view',value,{format:scope.format||defaultFormat});picker.set('highlight',value,{format:scope.format||defaultFormat});return picker.get('highlight',viewFormat);});ngModel.$parsers.push(function(){return picker.get('select',scope.format||defaultFormat);});if(angular.isDefined(attrs.minDate)){var onceMin=scope.$watch('minDate',function(value){if(value){picker.set('min',formatDate(value));onceMin();}},true);}
if(angular.isDefined(attrs.maxDate)){var onceMax=scope.$watch('maxDate',function(value){if(value){picker.set('max',formatDate(value));onceMax();}},true);}}};});