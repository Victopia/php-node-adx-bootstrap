;(function(){'use strict';angular.module('adxBsApp').controller('GenericModelCtrl',GenericModelController);function GenericModelController($routeParams,$localStorage,$window,$location,$http,$timeout,$pnotify,$scope){var ctx=this;ctx.dataModel=null;ctx.dataItems=[];ctx.currentData=null;ctx.listState={status:0,offset:0,length:20};ctx.viewStates={save:0,delete:0,deleteVisible:false,actionContext:{}};ctx.loadData=doDataItem;ctx.setData=doSetItem;ctx.saveData=doSaveItem;ctx.deleteData=doDeleteItem;$scope.$on('$locationChangeStart',function($evt,next,current){var vs=ctx.viewStates;if(!vs.confirmLeave&&(ctx.dataForm&&!ctx.dataForm.$pristine)){}
function clearConfirmState(){delete vs.confirmLeave;}});$scope.$watch('forms',function(value){if(value&&!ctx.dataModel){for(var i=0;i<value.length;i++){if(value[i].uuid==$routeParams.formId){ctx.dataModel=angular.copy(value[i]);$scope.$root.navTitle='Data: '+value[i].title;doDataSchema(value[i].module);return;}}
$location.path('/');}
else{ctx.dataModel=null;ctx.dataItems=[];ctx.currentData=null;ctx.listState.status=0;ctx.listState.offset=0;}});$scope.$watch(function(){return JSON.stringify(ctx.viewStates.actionContext.filter);},function(value){$timeout(function(){$scope.$emit('list:filtered');});});function doDataSchema(){$http.get('../service/_/'+ctx.dataModel.module+'/schema').then(onDataSchema,noDataSchema).then(doDataItem);function onDataSchema(response){ctx.dataSchema=response.data;}
function noDataSchema(response){$pnotify.error(response.data.error);}}
function doDataItem(){var ls=ctx.listState;if(ls.status>0||!ctx.dataModel){return;}
ls.status=1;$http.get('../service/_/'+ctx.dataModel.module,{params:angular.extend({__sid:$localStorage.session.sid,__range:ls.offset+'-'+ls.length},ls.filter),cache:false}).then(onDataItem,noDataItem);function onDataItem(response){if(!angular.isArray(response.data)){response.data.error='Malformed response from server.';noDataItem(response);}
else{if(response.data.length<ls.length){ls.status=2;}
else{ls.status=0;ls.offset+=ls.length;}
ctx.dataItems=(ctx.dataItems||[]).concat(response.data);}}
function noDataItem(response){$pnotify.error(response.data.error||'Unable to download data items.','Server Error');ls.status=0;}}
function resetDataItems(){ctx.dataItems=[];ctx.listState.status=0;ctx.listState.offset=0;}
function doSetItem(data){ctx.currentData=null;$timeout(function(){ctx.currentData=data;});}
function doSaveItem($event){var vs=ctx.viewStates;if(!ctx.dataForm.$valid||vs.save>0)
return;$event.preventDefault();vs.save=1;var postUrl='../service/_/'+ctx.dataModel.module;if(ctx.currentData.uuid){postUrl+='/'+ctx.currentData.uuid;}
$http.post(postUrl,angular.extend({__sid:$localStorage.session.sid},ctx.currentData)).then(onSaveItem,noSaveItem).finally(doneSaveItem);function onSaveItem(response){if(response.status==201){resetDataItems();doDataItem();}
doSetItem(response.data);}
function noSaveItem(response){if(response.data.errors){var errors=[];angular.forEach(response.data.errors,function(value,key){errors.push(key+': '+value);});$pnotify.error(errors.join('\n'),'Invalid Data Input');}
else{$pnotify.error(response.data.error||'Unable to save data.','Server Error');}}
function doneSaveItem(){vs.save=0;}}
function doDeleteItem(){var vs=ctx.viewStates;if(vs.delete>0)
return;vs.delete=1;$http.delete('../service/_/'+ctx.dataModel.module+'/'+ctx.currentData.uuid,{params:{__sid:$localStorage.session.sid}}).then(onDeleteItem,noDeleteItem).finally(doneDeleteItem);function onDeleteItem(response){if(response.data){ctx.currentData=null;}}
function noDeleteItem(response){$pnotify.error(response.data.error||'Unable to delete this item.','Server Error');}
function doneDeleteItem(){vs.delete=0;ctx.currentData=null;ctx.viewStates.deleteVisible=false;resetDataItems();doDataItem();}}}})();